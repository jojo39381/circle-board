{"ast":null,"code":"var _jsxFileName = \"/Users/josephyeh/Desktop/internship-circle/src/Column.jsx\";\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task.jsx';\nimport Add from './Add.jsx';\nimport AddScreen from './AddScreen.jsx';\n\nfunction Column(prop) {\n  const [clicked, setClicked] = useState(false);\n\n  function toggleAdd() {\n    console.log('lmao');\n    setClicked(!clicked);\n  }\n\n  function addTask(destination, text) {\n    console.log(destination);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    toggleAdd: toggleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, prop.provided.droppableProps, {\n    ref: prop.provided.innerRef,\n    style: {\n      background: prop.snapshot.isDraggingOver ? '#F3F4F6' : '#F3F4F6',\n      padding: 4,\n      width: 250,\n      minHeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), prop.column.items.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 49\n      }\n    }, (provided, snapshot) => {\n      return /*#__PURE__*/React.createElement(Task, {\n        provided: provided,\n        snapshot: snapshot,\n        text: item.content,\n        img: item.img,\n        date: item.date,\n        color: item.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 61\n        }\n      });\n    });\n  }), prop.provided.placeholder), clicked ? /*#__PURE__*/React.createElement(AddScreen, {\n    toggleAdd: toggleAdd,\n    addTask: addTask,\n    column: prop.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }) : null);\n}\n\nexport default Column;","map":{"version":3,"sources":["/Users/josephyeh/Desktop/internship-circle/src/Column.jsx"],"names":["React","useState","DragDropContext","Droppable","Draggable","Task","Add","AddScreen","Column","prop","clicked","setClicked","toggleAdd","console","log","addTask","destination","text","provided","droppableProps","innerRef","background","snapshot","isDraggingOver","padding","width","minHeight","column","items","map","item","index","id","content","img","date","color","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,EAAyBC,SAAzB,EAAoCC,SAApC,QAAqD,qBAArD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AACA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAElB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAGA,WAASW,SAAT,GAAqB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAH,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAEH;;AACD,WAASK,OAAT,CAAiBC,WAAjB,EAA8BC,IAA9B,EAAoC;AAChCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AAKH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,6CAASH,IAAI,CAACS,QAAL,CAAcC,cAAvB;AACA,IAAA,GAAG,EAAEV,IAAI,CAACS,QAAL,CAAcE,QADnB;AAEA,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAEZ,IAAI,CAACa,QAAL,CAAcC,cAAd,GAA+B,SAA/B,GAA2C,SAAxD;AAAmEC,MAAAA,OAAO,EAAE,CAA5E;AAA+EC,MAAAA,KAAK,EAAE,GAAtF;AAA2FC,MAAAA,SAAS,EAAE;AAAtG,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIKjB,IAAI,CAACkB,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACR,wBACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,IAAI,CAACE,EAArB;AAAyB,MAAA,WAAW,EAAEF,IAAI,CAACE,EAA3C;AAA+C,MAAA,KAAK,EAAED,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACb,QAAD,EAAWI,QAAX,KAAwB;AACrB,0BACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEJ,QAAhB;AAA0B,QAAA,QAAQ,EAAGI,QAArC;AAA+C,QAAA,IAAI,EAAIQ,IAAI,CAACG,OAA5D;AAAqE,QAAA,GAAG,EAAEH,IAAI,CAACI,GAA/E;AAAoF,QAAA,IAAI,EAAEJ,IAAI,CAACK,IAA/F;AAAqG,QAAA,KAAK,EAAEL,IAAI,CAACM,KAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH,KAPL,CADJ;AAWH,GAZ5B,CAJL,EAiB6B3B,IAAI,CAACS,QAAL,CAAcmB,WAjB3C,CAFA,EAqBiB3B,OAAO,gBACR,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEE,SAAtB;AAAiC,IAAA,OAAO,EAAEG,OAA1C;AAAmD,IAAA,MAAM,EAAEN,IAAI,CAACkB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAET,IAvBf,CADJ;AA2BH;;AACD,eAAenB,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport {DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task.jsx';\nimport Add from './Add.jsx';\nimport AddScreen from './AddScreen.jsx';\nfunction Column(prop) {\n\n    const [clicked, setClicked] = useState(false);\n    \n\n    function toggleAdd() {\n        console.log('lmao')\n        setClicked(!clicked)\n        \n    }\n    function addTask(destination, text) {\n        console.log(destination)\n        \n       \n        \n        \n    }\n    return (\n        <div>\n        <Add toggleAdd={toggleAdd}></Add>\n        <div {...prop.provided.droppableProps}\n        ref={prop.provided.innerRef}\n        style={{background: prop.snapshot.isDraggingOver ? '#F3F4F6' : '#F3F4F6', padding: 4, width: 250, minHeight: 500}}\n        >\n            {prop.column.items.map((item, index) => {\n                                            return (\n                                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                                    {(provided, snapshot) => {\n                                                        return (\n                                                            <Task provided={provided} snapshot= {snapshot} text = {item.content} img={item.img} date={item.date} color={item.color} />\n\n                                                            \n                                                        );\n                                                    }}\n                                                </Draggable>\n                                            );\n                                        })}\n                                    {prop.provided.placeholder}\n        </div>\n                        {clicked ?  \n                        <AddScreen toggleAdd={toggleAdd} addTask={addTask} column={prop.column} />  \n                     : null } \n        </div>\n    )\n}\nexport default Column;"]},"metadata":{},"sourceType":"module"}