{"ast":null,"code":"var _jsxFileName = \"/Users/josephyeh/Desktop/internship-circle/src/App.js\";\nimport React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task.jsx';\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task'\n}, {\n  id: uuid(),\n  content: 'Second task'\n}];\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: 'Requested',\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: 'Todo',\n    items: []\n  },\n  [uuid()]: {\n    name: 'In Progress',\n    items: []\n  },\n  [uuid()]: {\n    name: 'Done',\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, Object.entries(columns).map(([id, column]) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: id,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, (provided, snapshot) => {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n          padding: 4,\n          width: 250,\n          minHeight: 500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }), column.items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 49\n          }\n        }, (provided, snapshot) => {\n          return /*#__PURE__*/React.createElement(Task, {\n            provided: provided,\n            snapshot: snapshot,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 61\n            }\n          });\n        });\n      }), provided.placeholder);\n    })));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josephyeh/Desktop/internship-circle/src/App.js"],"names":["React","useState","v4","uuid","DragDropContext","Droppable","Draggable","Task","itemsFromBackend","id","content","columnsFromBackend","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","App","display","justifyContent","height","Object","entries","map","flexDirection","alignItems","margin","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {v4 as uuid} from 'uuid';\nimport {DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task.jsx';\nconst itemsFromBackend = [\n    {id: uuid(), content: 'First task'},\n    {id: uuid(), content: 'Second task'}\n]\nconst columnsFromBackend = \n    {   [uuid()] : {\n            name: 'Requested',\n            items: itemsFromBackend\n        },\n        [uuid()]: {\n            name: 'Todo',\n            items: []\n        },\n        [uuid()]: {\n            name: 'In Progress',\n            items: []\n        },\n        [uuid()]: {\n            name: 'Done',\n            items:[]\n        }\n\n    };\n\n\n\n\n\nconst onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {source, destination } = result;\n    if(source.droppableId !== destination.droppableId) {\n        const sourceColumn = columns[source.droppableId];\n        const destColumn = columns[destination.droppableId];\n        const sourceItems = [...sourceColumn.items];\n        const destItems = [...destColumn.items];\n        const [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n        setColumns({\n            ...columns,\n            [source.droppableId]:  {\n                ...sourceColumn, \n                items: sourceItems\n            },\n            [destination.droppableId]: {\n                ...destColumn, \n                items: destItems\n            }\n        })\n    }\n    else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n}\n    \n\n    \n\n};\nfunction App() {\n    const [columns, setColumns] = useState(columnsFromBackend);\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', height: '100%'}}>\n            <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\n                {Object.entries(columns).map(([id, column]) => {\n                    return (\n                        <div style={{display:'flex', flexDirection: 'column', alignItems: 'center'}}>\n                        <h2>{column.name}</h2>\n                        <div style ={{margin: 8}}>\n                        <Droppable droppableId={id} key={id}>\n                            {(provided, snapshot) => {\n                                return (\n                                    <div {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                    style={{background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey', padding: 4, width: 250, minHeight: 500}}\n                                    >\n                                    \n                                        {column.items.map((item, index) => {\n                                            return (\n                                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                                    {(provided, snapshot) => {\n                                                        return (\n                                                            <Task provided={provided} snapshot={snapshot}>\n\n                                                            </Task>\n                                                        );\n                                                    }}\n                                                </Draggable>\n                                            );\n                                        })}\n                                    {provided.placeholder}\n                                    </div>\n                                )\n                            }}\n                        </Droppable>\n                        </div>\n                        </div>\n                    )\n                })}\n            </DragDropContext>\n        </div>\n    )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}