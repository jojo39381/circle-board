{"ast":null,"code":"var _jsxFileName = \"/Users/josephyeh/Desktop/internship-circle/src/components/Column.jsx\";\nimport React, { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Task from './Task.jsx';\nimport Add from './Add.jsx';\nimport AddScreen from './AddScreen.jsx';\nimport EditScreen from './EditScreen.jsx';\n\nfunction Column(prop) {\n  /* click state */\n  const [clickedAdd, setClicked] = useState(false);\n  const [clickedEdit, setEdit] = useState(false);\n  /* function to toggle add task screen */\n\n  function toggleAdd() {\n    setClicked(!clickedAdd);\n  }\n\n  function toggleEdit() {\n    setEdit(!clickedEdit);\n  }\n  /* add task to column */\n\n\n  function addTask(destination, text) {\n    console.log(destination);\n    prop.addToColumn(destination, text);\n  }\n\n  function updateTask(destination, text) {}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    toggleAdd: toggleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, prop.provided.droppableProps, {\n    ref: prop.provided.innerRef,\n    style: {\n      background: prop.snapshot.isDraggingOver ? '#F3F4F6' : '#F3F4F6',\n      padding: 4,\n      width: 250,\n      minHeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), prop.column.items.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, (provided, snapshot) => {\n      return /*#__PURE__*/React.createElement(Task, {\n        provided: provided,\n        snapshot: snapshot,\n        text: item.content,\n        img: item.assigned,\n        date: item.date,\n        color: item.color,\n        id: item.id,\n        onClick: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }\n      });\n    });\n  }), prop.provided.placeholder), clickedAdd ? /*#__PURE__*/React.createElement(AddScreen, {\n    toggleAdd: toggleAdd,\n    addTask: addTask,\n    id: prop.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }) : null, clickedEdit ? /*#__PURE__*/React.createElement(EditScreen, {\n    toggleAdd: toggleEdit,\n    editTask: addTask,\n    id: prop.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }) : null);\n}\n\nexport default Column;","map":{"version":3,"sources":["/Users/josephyeh/Desktop/internship-circle/src/components/Column.jsx"],"names":["React","useState","Draggable","Task","Add","AddScreen","EditScreen","Column","prop","clickedAdd","setClicked","clickedEdit","setEdit","toggleAdd","toggleEdit","addTask","destination","text","console","log","addToColumn","updateTask","provided","droppableProps","innerRef","background","snapshot","isDraggingOver","padding","width","minHeight","column","items","map","item","index","id","content","assigned","date","color","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAyB,qBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AACA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAElB;AACA,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BT,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACU,WAAD,EAAcC,OAAd,IAAyBX,QAAQ,CAAC,KAAD,CAAvC;AACA;;AACA,WAASY,SAAT,GAAqB;AACjBH,IAAAA,UAAU,CAAC,CAACD,UAAF,CAAV;AACH;;AAED,WAASK,UAAT,GAAsB;AAClBF,IAAAA,OAAO,CAAC,CAACD,WAAF,CAAP;AACH;AACD;;;AACA,WAASI,OAAT,CAAiBC,WAAjB,EAA8BC,IAA9B,EAAoC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAR,IAAAA,IAAI,CAACY,WAAL,CAAiBJ,WAAjB,EAA8BC,IAA9B;AACH;;AACD,WAASI,UAAT,CAAoBL,WAApB,EAAiCC,IAAjC,EAAuC,CAEtC;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,6CAASL,IAAI,CAACc,QAAL,CAAcC,cAAvB;AACA,IAAA,GAAG,EAAEf,IAAI,CAACc,QAAL,CAAcE,QADnB;AAEA,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAEjB,IAAI,CAACkB,QAAL,CAAcC,cAAd,GAA+B,SAA/B,GAA2C,SAAxD;AAAmEC,MAAAA,OAAO,EAAE,CAA5E;AAA+EC,MAAAA,KAAK,EAAE,GAAtF;AAA2FC,MAAAA,SAAS,EAAE;AAAtG,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGKtB,IAAI,CAACuB,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,wBACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,IAAI,CAACE,EAArB;AAAyB,MAAA,WAAW,EAAEF,IAAI,CAACE,EAA3C;AAA+C,MAAA,KAAK,EAAED,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACb,QAAD,EAAWI,QAAX,KAAwB;AACrB,0BACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEJ,QAAhB;AAA0B,QAAA,QAAQ,EAAGI,QAArC;AAA+C,QAAA,IAAI,EAAIQ,IAAI,CAACG,OAA5D;AAAqE,QAAA,GAAG,EAAEH,IAAI,CAACI,QAA/E;AAAyF,QAAA,IAAI,EAAEJ,IAAI,CAACK,IAApG;AAA0G,QAAA,KAAK,EAAEL,IAAI,CAACM,KAAtH;AAA6H,QAAA,EAAE,EAAEN,IAAI,CAACE,EAAtI;AAA0I,QAAA,OAAO,EAAEF,IAAI,CAACE,EAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGK,KALb,CADJ;AASC,GAVR,CAHL,EAcK5B,IAAI,CAACc,QAAL,CAAcmB,WAdnB,CAFA,EAkBKhC,UAAU,gBACX,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEI,SAAtB;AAAiC,IAAA,OAAO,EAAEE,OAA1C;AAAmD,IAAA,EAAE,EAAEP,IAAI,CAAC4B,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAER,IApBP,EAqBMzB,WAAW,gBACb,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEG,UAAvB;AAAmC,IAAA,QAAQ,EAAEC,OAA7C;AAAsD,IAAA,EAAE,EAAEP,IAAI,CAAC4B,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,GAEV,IAvBP,CADJ;AA4BH;;AAED,eAAe7B,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Draggable } from 'react-beautiful-dnd';\nimport Task from './Task.jsx';\nimport Add from './Add.jsx';\nimport AddScreen from './AddScreen.jsx';\nimport EditScreen from './EditScreen.jsx';\nfunction Column(prop) {\n\n    /* click state */\n    const [clickedAdd, setClicked] = useState(false);\n    const [clickedEdit, setEdit] = useState(false);\n    /* function to toggle add task screen */\n    function toggleAdd() {\n        setClicked(!clickedAdd) \n    }\n\n    function toggleEdit() {\n        setEdit(!clickedEdit)\n    }\n    /* add task to column */\n    function addTask(destination, text) {\n        console.log(destination)\n        prop.addToColumn(destination, text)\n    }\n    function updateTask(destination, text) {\n\n    }\n    return (\n        <div>\n        <Add toggleAdd={toggleAdd}></Add>\n        <div {...prop.provided.droppableProps}\n        ref={prop.provided.innerRef}\n        style={{background: prop.snapshot.isDraggingOver ? '#F3F4F6' : '#F3F4F6', padding: 4, width: 250, minHeight: 500}}>\n            {prop.column.items.map((item, index) => {\n                    return (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {(provided, snapshot) => {\n                                return (\n                                    <Task provided={provided} snapshot= {snapshot} text = {item.content} img={item.assigned} date={item.date} color={item.color} id={item.id} onClick={item.id}/>             \n                                         );\n                                    }}\n                         </Draggable>\n                        );\n                    })}\n            {prop.provided.placeholder}\n        </div>\n            {clickedAdd ?  \n            <AddScreen toggleAdd={toggleAdd} addTask={addTask} id={prop.id} />  \n             : null } \n             {clickedEdit?  \n            <EditScreen toggleAdd={toggleEdit} editTask={addTask} id={prop.id} />  \n             : null } \n             \n        </div>\n    )\n}\n\nexport default Column;"]},"metadata":{},"sourceType":"module"}